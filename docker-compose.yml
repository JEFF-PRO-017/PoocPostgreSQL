#version: '3.1'
#
#services:
#  postgres:
#    image: postgres:15
#    container_name: postgres_data
#    restart: always
#    environment:
#      POSTGRES_PASSWORD: postgres
#      POSTGRES_DB: people
#    ports:
#      - "5433:5432"



version: '3.8'

services:
  # PostgreSQL
#  postgres:
#    image: postgres:15-alpine
#    container_name: postgres
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#      POSTGRES_DB: postgres
#      POSTGRES_MULTIPLE_DATABASES: keycloak-db
#    ports:
#      - "5434:5432"
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5

  # Keycloak avec PostgreSQL
#  keycloak:
#    image: quay.io/keycloak/keycloak:22.0
#    container_name: keycloak
#    command: start-dev
#    environment:
#      KC_DB: postgres
#      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak-db
#      KC_DB_USERNAME: postgres
#      KC_DB_PASSWORD: postgres
#      KEYCLOAK_ADMIN: admin
#      KEYCLOAK_ADMIN_PASSWORD: admin
#    ports:
#      - "8080:8080"
#    depends_on:
#      postgres:
#        condition: service_healthy

#  # Redis et Redis Insight
#  redis:
#    image: redis:7-alpine
#    container_name: redis
#    ports:
#      - "6379:6379"
#    volumes:
#      - redis_data:/data
#
#  redis-insight:
#    image: redislabs/redisinsight:latest
#    container_name: redis-insight
#    ports:
#      - "8001:8001"
#    volumes:
#      - redis_insight_data:/db
#    depends_on:
#      - redis

  # Kafka avec Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data

  # Interface web pour Kafka
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8082:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka

volumes:
#  postgres_data:
#  redis_data:
#  redis_insight_data:
  zookeeper_data:
  zookeeper_log:
  kafka_data: